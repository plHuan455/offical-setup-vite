@mixin text-overflow($number: 2) {
  -webkit-box-orient: vertical;
  display: -webkit-box;
  -webkit-line-clamp: ($number);
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin aspect-ratio($width: 1, $height: 1) {
  padding-bottom: calc(#{$height} / #{$width} * 100%);
}

@mixin transition($value) {
  transition: $value;
}

@mixin scroll-bars(
  $size: 12,
  // $thumbColor: $celestial-blue,
  // $trackColor: $alice-blue,
  $thumb-color: $golden-brown,
  $track-color: $bg-white-smoke,
  $border-radius-thumb: 5,
  $border-radius-track: 5,
  $border-thumb: 2,
) {
  // For Google Chrome
  &::-webkit-scrollbar {
    height: rem($size);
    margin-right: rem(10);
    width: rem($size);
  }

  &::-webkit-scrollbar-thumb {
    // background: $thumb-color;
    // border: rem($border-thumb) solid $track-color;
    background: $thumb-color;
    border: rem($border-thumb) solid $track-color;
    border-radius: rem($border-radius-thumb);
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: rem($border-radius-track);
  }

  // For Internet Explorer

  scrollbar-face-color: $thumb-color;
  scrollbar-track-color: $track-color;
}

@mixin font-base($font-size: 16, $line-height: 24) {
  font-size: rem($font-size);
  line-height: rem($line-height);
}

@mixin style-bg-color() {
  &-bg-white {
    background-color: $white;
  }
}

@mixin style-font-weight() {
  &-100 {
    font-weight: 100;
  }

  &-200 {
    font-weight: 200;
  }

  &-300 {
    font-weight: 300;
  }

  &-400 {
    font-weight: normal;
  }

  &-500 {
    font-weight: 500;
  }

  &-600 {
    font-weight: 600;
  }

  &-700 {
    font-weight: bold;
  }

  &-800 {
    font-weight: 800;
  }

  &-900 {
    font-weight: 900;
  }
}

@mixin style-general() {
  &-uppercase {
    text-transform: uppercase;
  }

  &-capitalize {
    text-transform: capitalize;
  }

  &-underline {
    text-decoration: underline;
  }

  &-italic {
    font-style: italic;
  }

  &-center {
    text-align: center;
  }

  &-justify {
    text-align: justify;
  }

  &-left {
    text-align: left;
  }
}

@mixin reset-button {
  appearance: none;
  background-color: transparent;
  border: 0;
  outline: none;
}

@mixin list-style-none {
  list-style: none;
  margin: 0;
  padding: 0;
}

@mixin adjust-flex($justify-content: center, $align-item: center) {
  align-items: $align-item;
  display: flex;
  justify-content: $justify-content;
}

$colors-design: (
  'white': $white,
  'charcoal': $charcoal,
);

@mixin style-color {
  @each $name, $color in $colors-design {
    &-#{$name} {
      color: $color;
    }
  }
}

// prefix declarations
@mixin prefixed($property, $value) {
  @if $webkit == true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz == true {
    -moz-#{$property}: #{$value};
  }

  @if $ms == true {
    -ms-#{$property}: #{$value};
  }

  @if $o == true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}

$font-design: (
  'fontLexend': $font-lexend,
  'fontNoto': $font-noto,
  'fontLato': $font-lato,
  'fontCalibri': $font-calibri,
);

@mixin style-font-family {
  @each $name, $font in $font-design {
    &-#{$name} {
      font-family: $font;
    }
  }
}

@mixin style-font-size($sizeList) {
  @each $size,
      $val in $sizeList {
      
      @if map-get($val, 'desktop') {

          &-#{$size} {
              font-size: rem(map-get(map-get($val, 'desktop'), 'fs'));
              line-height: rem(map-get(map-get($val, 'desktop'), 'lh'));

              @if map-get($val, 'tablet') {
                  @include tablet-down {
                      font-size: rem(map-get(map-get($val, 'tablet'), 'fs'));
                      line-height: rem(map-get(map-get($val, 'tablet'), 'lh'));
                  }
              }

              @if map-get($val, 'mobile') {
                  @include mobile-down {
                      font-size: rem(map-get(map-get($val, 'mobile'), 'fs'));
                      line-height: rem(map-get(map-get($val, 'mobile'), 'lh'));
                  }
              }                
          }
      }
      
  }
}
